#include<stdio.h> 
#include<stdlib.h>  
#include<string.h> 
char ip_sym[15],stack[15]; 
int ip_ptr=0,st_ptr=0,len,i; 
char temp[2],temp2[2]; 
char act[15]; 
void check(); 
int main() 
{ 
printf("\n\t\t SHIFT REDUCE PARSER\n"); 
printf("\n GRAMMER\n"); 
printf("\n E->E+E\n E->E/E"); 
printf("\n E->E*E\n E->a/b"); 
printf("\n enter the input symbol:\t"); 
gets(ip_sym); 
printf("\n\t stack implementation table"); 
printf("\n stack \t\t input symbol\t\t action"); 
printf("\n___\t\t____\t\t_____\n"); 
printf("\n $\t\t%s$\t\t\t--",ip_sym); 
strcpy(act,"shift "); 
temp[0]=ip_sym[ip_ptr]; 
temp[1]='\0'; 
strcat(act,temp); 
len=strlen(ip_sym); 
for(i=0;i<=len-1;i++) 
{ 
stack[st_ptr]=ip_sym[ip_ptr];  
stack[st_ptr+1]='\0'; 
ip_sym[ip_ptr]=' ';
ip_ptr++; 
printf("\n $%s\t\t%s$\t\t\t%s",stack,ip_sym,act); 
strcpy(act,"shift"); 
temp[0]=ip_sym[ip_ptr]; 
temp[1]='\0'; 
strcat(act,temp); 
check(); 
st_ptr++; 
} 
st_ptr++; 
check(); 
} 
void check() 
